{"version":3,"sources":["Assets/Img/loader.svg","config.js","Utils/apollo.js","Components/Header/HeaderContainer.js","Components/Header/HeaderWrapper.js","Components/Header/HeaderTitle.js","Components/Header/HeaderSubtitle.js","Components/Header/Header.js","Components/Common/Loader.js","Components/Blog/BlogContainer.js","Components/Blog/Card/CardContainer.js","Components/Blog/Card/CardHeader.js","Components/Blog/Card/CardCategory.js","Components/Blog/Card/CardTitle.js","Components/Blog/Card/CardDescription.js","Components/Blog/Card/CardReadingTime.js","Components/Blog/Card/Card.js","Containers/Blog.js","Utils/emoji.js","Utils/auth.js","Components/Post/PostContainer.js","Components/Post/PostTitle.js","Components/Post/PostDate.js","Components/Post/PostDateLink.js","Components/Post/PostReaction.js","Components/Post/BackButton.js","Components/Post/Author/AuthorDetails.js","Components/Post/Author/AuthorAvatar.js","Components/Post/Author/AuthorName.js","Containers/BlogPost.js","Router.js","Containers/GithubCallback.js","Application.js","serviceWorker.js","index.js"],"names":["module","exports","config","githubConvertedToken","githubUserName","githubRepo","title","subtitle","header","backgroundColor","titleColor","subtitleColor","client","ApolloClient","uri","request","operation","setContext","headers","authorization","atob","HeaderContainer","styled","div","HeaderWrapper","HeaderTitle","h1","HeaderSubtitle","Header","LoaderContainer","span","Loader","src","loader","alt","BlogContainer","CardContainer","CardHeader","StyledCategory","CardCategory","value","key","id","style","color","name","CardTitle","h2","p","ReadingTime","CardReadingTime","time","Card","blog","useState","labels","setLabels","history","useHistory","useEffect","nodes","filter","readingTime","body","minutes","onClick","number","push","map","i","GET_POSTS","gql","Blog","posts","setPosts","useQuery","loading","error","data","console","repository","issues","className","v","emojis","getAuthenticatedUser","a","async","token","localStorage","getItem","fetch","Headers","response","json","result","PostContainer","PostTitle","PostDate","BackButton","button","AuthorDetails","AuthorAvatar","img","AuthorName","BlogHome","issueNumber","parseInt","window","location","href","split","pop","post","setPost","setPostNodeId","setPostReactions","setReactionFun","useRef","useCallback","reactions","reactions_array","forEach","element","emojiName","obj","by","user","login","emoji","content","issue","go","back","author","avatarUrl","moment","updatedAt","format","options","overrides","component","children","props","target","rel","jsx","pre","language","docco","createBrowserHistory","require","Router","exact","path","BlogPost","enableOAuth","OAuthClientID","OAuthSecret","GithubCallback","setLoading","code","method","URLSearchParams","client_id","client_secret","authenticate","search","get","then","setItem","access_token","setUsername","replace","origin","pathname","Application","Helmet","charSet","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,oC,iLCA9BC,EAAS,CACpBC,qBACE,2DACFC,eAAgB,cAChBC,WAAY,WACZC,MAAO,UACPC,SAAU,oBACVC,OAAQ,CACNC,gBAAiB,UACjBC,WAAY,UACZC,cAAe,Y,QCNNC,EAAS,IAAIC,IAAa,CACrCC,IAAK,iCACLC,QAAS,SAAAC,GACPA,EAAUC,WAAW,CACnBC,QAAS,CACPC,cAAc,UAAD,OAAYC,KAAKlB,EAAOC,6B,iYCNrCM,EAAoBP,EAAOM,OAA3BC,gBAEKY,EAAkBC,IAAOC,IAAV,IAIZd,G,0JCPT,IAAMe,EAAgBF,IAAOC,IAAV,K,kRCClBb,EAAeR,EAAOM,OAAtBE,WAEKe,EAAcH,IAAOI,GAAV,IAMbhB,G,kRCRHC,EAAkBT,EAAOM,OAAzBG,cAEKgB,EAAiBL,IAAOI,GAAV,IAEhBf,GCGEiB,EAAS,WACpB,OACE,kBAACP,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,KAAcvB,EAAOI,OACrB,kBAACqB,EAAD,KAAiBzB,EAAOK,a,mMCVhC,IAAMsB,EAAkBP,IAAOQ,KAAV,KAURC,EAAS,kBACpB,kBAACF,EAAD,KACE,yBAAKG,IAAKC,IAAQC,IAAI,iB,6ICfnB,IAAMC,EAAgBb,IAAOC,IAAV,IAItB,I,0LCJG,IAAMa,EAAgBd,IAAOC,IAAV,IAOtB,I,oJCPG,IAAMc,EAAaf,IAAOC,IAAV,K,uUCCvB,IAAMe,EAAiBhB,IAAOC,IAAV,KAcPgB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1B,kBAACF,EAAD,CAAgBG,IAAKD,EAAME,GAAIC,MAAO,CAAElC,gBAAgB,IAAD,OAAM+B,EAAMI,SAChEJ,EAAMK,O,2FCjBJ,IAAMC,EAAYxB,IAAOyB,GAAV,K,oMCASzB,IAAO0B,EAAV,K,oKCC5B,IAAMC,EAAc3B,IAAO0B,EAAV,KAQJE,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC7B,kBAACF,EAAD,KAAcE,EAAd,c,iBCCWC,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACJC,mBAAS,IADL,mBACzBC,EADyB,KACjBC,EADiB,KAE1BC,EAAUC,cAchB,OARAC,qBAAU,WACR,IAAMJ,EAASF,EAAKE,OAAOK,MAAMC,QAAO,SAACrB,GACvC,MAAsB,SAAfA,EAAMK,QAGfW,EAAUD,KACT,CAACF,EAAKE,OAAOK,QAGd,kBAACxB,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAiBc,KAAMW,IAAYT,EAAKU,MAAMC,WAEhD,yBAAKC,QAAS,kBAjBA3D,EAiBe+C,EAAK/C,MAjBb4D,EAiBoBb,EAAKa,YAhBhDT,EAAQU,KAAR,gBAAsB7D,EAAtB,YAA+B4D,IADhB,IAAC5D,EAAO4D,IAkBnB,kBAACpB,EAAD,KAAYO,EAAK/C,OAEjB,oCACGiD,EAAOa,KAAI,SAAC5B,EAAO6B,GAClB,OAAO,kBAAC,EAAD,CAAc7B,MAAOA,EAAOC,IAAK4B,W,kiBC7BpD,IAAMC,GAAYC,YAAH,IAEQrE,EAAOE,eAA2BF,EAAOG,YAkEjDmE,GAtCF,WAAO,IAAD,EACSlB,mBAAS,IADlB,mBACVmB,EADU,KACHC,EADG,OAEgBC,YAASL,IAAlCM,EAFS,EAETA,QAASC,EAFA,EAEAA,MAAOC,EAFP,EAEOA,KAcxB,OAZAnB,qBAAU,WAMK,IAAD,IALPiB,IACCC,GACFE,QAAQF,MAAMA,GAGZC,GACFJ,EAAQ,OAACI,QAAD,IAACA,OAAD,YAACA,EAAME,kBAAP,uBAAC,EAAkBC,cAAnB,aAAC,EAA0BrB,UAGtC,CAACgB,EAASC,EAAOC,IAGlB,oCACE,kBAAC,EAAD,MACA,kBAAC3C,EAAD,KACE,yBAAK+C,UAAU,uBACZN,EACC,kBAAC,EAAD,MAEAH,EAAML,KAAI,SAACe,EAAGd,GACZ,OACE,yBAAKa,UAAU,iBACb,kBAAC,EAAD,CAAM7B,KAAM8B,EAAG1C,IAAK4B,Y,iFCjEhCe,I,OAAS,CACb,UAAa,eACb,YAAe,eACf,MAAS,eACT,OAAU,eACV,SAAY,eACZ,MAAS,eACT,OAAU,eACV,KAAQ,iBCNGC,GAAuB,+BAAAC,EAAAC,OAAA,qDAC5BC,EAAQC,aAAaC,QAAQ,gBADD,oCAAAJ,EAAA,MAGTK,MAAM,8BAA+B,CAC1DzE,QAAS,IAAI0E,QAAQ,CACnBzE,cAAc,UAAD,OAAYqE,QALG,cAG1BK,EAH0B,mBAAAP,EAAA,MAQXO,EAASC,QARE,cAQ1BC,EAR0B,QASzBP,MAAQA,EATiB,kBAUzBO,GAVyB,uC,mLCF7B,IAAMC,GAAgB1E,IAAOC,IAAV,M,mJCAnB,IAAM0E,GAAY3E,IAAOI,GAAV,M,4LCAf,IAAMwE,GAAW5E,IAAO0B,EAAV,M,kVCAO1B,IAAOgE,EAAV,M,2OCAGhE,IAAOQ,KAAV,M,k8BCAlB,IAAMqE,GAAa7E,IAAO8E,OAAV,M,mHCAhB,IAAMC,GAAgB/E,IAAOC,IAAV,M,wKCAnB,IAAM+E,GAAehF,IAAOiF,IAAV,M,uKCAlB,IAAMC,GAAalF,IAAO0B,EAAV,M,kjBC2BR,SAASyD,KACtB,IAAMC,EAAcC,SAASC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,OACvD1C,EAAYC,YAAH,KACQrE,EAAOE,eAA2BF,EAAOG,WAC5CqG,GAJa,EAgCTpD,mBAAS,IAhCA,mBAgC1B2D,EAhC0B,KAgCpBC,EAhCoB,OAiCG5D,mBAAS,IAjCZ,mBAiCd6D,GAjCc,aAkCS7D,oBAAS,GAlClB,gCAmCSA,mBAAS,KAnClB,mBAmCX8D,GAnCW,aAoCAzC,YAASL,GAAlCM,EApCyB,EAoCzBA,QAASC,EApCgB,EAoChBA,MAAOC,EApCS,EAoCTA,KAIlBuC,GAHqBC,iBAAO,MAChB7B,aAAaC,QAAQ,eAEhB6B,uBAAY,SAACC,GAMlC,IAAIC,EAAkB,GACtBD,EAAUE,SAAQ,SAACC,GACjB,IXhEyBC,EWgErBC,EAAM,CACRC,GAAIH,EAAQI,KAAKC,MACjBC,OXlEuBL,EWkEDD,EAAQO,QXjE7B9C,GAAOwC,IAAc,KWmExBH,EAAgBtD,KAAK0D,MAGvBT,EAAiBK,KAChB,KA8FH,GAXA9D,qBAAU,WACR,IAAKiB,GACCE,EAAM,CACR,IAAMG,EAASH,EAAKE,WAAWmD,MAC/BhB,EAAclC,EAAOvC,IACrBwE,EAAQjC,GACRoC,EAAepC,EAAOuC,UAAU5D,UAGnC,CAACgB,EAASC,EAAOC,EAAMuC,IAEtBzC,EACF,OAAO,kBAAC,EAAD,MAUT,OACE,oCACGqC,EAAK3G,OACJ,kBAAC0F,GAAD,KACE,kBAACG,GAAD,CAAYlC,QAAS,kBAT3B2C,OAAOnD,QAAQ2E,UAEfxB,OAAOnD,QAAQ4E,SAOT,QAEA,kBAACpC,GAAD,KAAYgB,EAAK3G,OACjB,6BACE,kBAAC+F,GAAD,KACE,kBAACC,GAAD,CACEtE,IAAKiF,EAAKqB,OAAOC,UACjBrG,IAAK+E,EAAKqB,OAAON,QAEnB,6BACE,kBAACxB,GAAD,KAAaS,EAAKqB,OAAON,OACzB,kBAAC9B,GAAD,KACGsC,KAAOvB,EAAKwB,WAAWC,OAAO,eADjC,KAEG5E,IAAYmD,EAAKlD,MAAMC,QAF1B,kBAUN,kBAAC,KAAD,CACE2E,QAAS,CACPC,UAAW,CACTtD,EAAG,CACDuD,UApIE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,oCAChB,uBACEjC,KAAMiC,EAAMjC,KACZkC,OAAO,SACPC,IAAI,sBACJ/D,UAAU,oBAET4D,EACD,2BAAOI,IAAI,QAAX,yGA8HUC,IAAK,CACHN,UApHE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,kBAAC,KAAD,CAAmBM,SAAS,aAAazG,MAAO0G,MAC7CP,EAASC,MAAMD,eAuHT7B,EAAKlD,QC7NlB,IACMN,IAAU6F,EADWC,EAAQ,IAAWD,wBAc/BE,GAXA,WACb,OACE,kBAAC,IAAD,CAAY/F,QAASA,IACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,IAAIb,UAAWrE,KACjC,kBAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,4BAA4Bb,UAAWc,QCRzDC,GAA4C1J,EAA5C0J,YAAaC,GAA+B3J,EAA/B2J,cAAeC,GAAgB5J,EAAhB4J,YA8CrBC,GA5CQ,WAAO,IAAD,EACGzG,oBAAS,GADZ,mBACpBsB,EADoB,KACXoF,EADW,KAqC3B,OAXArG,qBAAU,YAvBW,SAAOsG,GAAP,gBAAA3E,EAAAC,OAAA,mEAAAD,EAAA,MAEIK,MAAM,kFAAmF,CAC9GuE,OAAQ,OACRnG,KAAM,IAAIoG,gBAAgB,CACxBC,UAAWP,GACXQ,cAAeP,GACfG,KAAMA,IAER/I,QAAS,IAAI0E,QAAQ,CACnB,OAAU,mBACV,eAAgB,yCAXD,cAEbC,EAFa,yBAeZA,EAASC,QAfG,sCAyBnBwE,CADkB,IAAIH,gBAAgBvD,OAAOC,SAAS0D,QAC/BC,IAAI,SAC1BC,MAAK,SAAC5E,GACDA,IACFJ,aAAaiF,QAAQ,cAAe7E,EAAS8E,cAV/B,6BAAArF,EAAAC,OAAA,mEAAAD,EAAA,MACMD,MADN,gBACV2C,EADU,EACVA,MACRvC,aAAaiF,QAAQ,iBAAkB1C,GAFrB,qCAWd4C,GAAcH,MAAK,kBAAMT,GAAW,YAGvC,IAEEJ,IAAgBhF,EAId,kBAAC,EAAD,MAHEgC,OAAOC,SAASgE,QAAQjE,OAAOC,SAASiE,OAASlE,OAAOC,SAASkE,WCf7DC,GAtBK,WAGlB,OAFkB,IAAIb,gBAAgBvD,OAAOC,SAAS0D,QAExCC,IAAI,QACT,kBAAC,GAAD,MAIP,oCACE,kBAACS,EAAA,OAAD,KACI,+BAAQ/K,EAAOI,OACf,0BAAM4K,QAAQ,UACd,0BAAMrI,KAAK,cAAcqF,QAAShI,EAAOK,WACzC,0BAAMsC,KAAK,cAAcqF,QAAShI,EAAOM,OAAOC,mBAEpD,kBAAC,IAAD,CAAgBG,OAAQA,GACtB,kBAAC,GAAD,SCzBFuK,GAAcC,QACW,cAA7BxE,OAAOC,SAASwE,UAEe,UAA7BzE,OAAOC,SAASwE,UAEhBzE,OAAOC,SAASwE,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOtL,GAC9BuL,UAAUC,cACPC,SAASH,GACTf,MAAK,SAACmB,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BnH,QAAQoH,IACN,iHAKEjM,GAAUA,EAAOkM,UACnBlM,EAAOkM,SAASR,KAMlB7G,QAAQoH,IAAI,sCAGRjM,GAAUA,EAAOmM,WACnBnM,EAAOmM,UAAUT,WAO5BU,OAAM,SAACzH,GACNE,QAAQF,MAAM,4CAA6CA,M,OC7EjE0H,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,SDGlD,SAAkBxM,GACvB,GAA6C,kBAAmBuL,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwBhG,OAAOC,SAASC,MACpDgE,SAAWlE,OAAOC,SAASiE,OAIvC,OAGFlE,OAAOiG,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMoB,GAAN,sBAEPzB,KAgEV,SAAiCK,EAAOtL,GAEtCyF,MAAM6F,EAAO,CACXtK,QAAS,CAAE,iBAAkB,YAE5BuJ,MAAK,SAAC5E,GAEL,IAAMiH,EAAcjH,EAAS3E,QAAQsJ,IAAI,gBAEnB,MAApB3E,EAASkH,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAMxC,MAAK,SAACmB,GAClCA,EAAasB,aAAazC,MAAK,WAC7B7D,OAAOC,SAASsG,eAKpB5B,GAAgBC,EAAOtL,MAG1BoM,OAAM,WACLvH,QAAQoH,IACN,oEAvFAiB,CAAwB5B,EAAOtL,GAI/BuL,UAAUC,cAAcuB,MAAMxC,MAAK,WACjC1F,QAAQoH,IACN,iHAMJZ,GAAgBC,EAAOtL,OC1BWwL,K","file":"static/js/main.17bf58db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.65f8709d.svg\";","export const config = {\n  githubConvertedToken:\n    \"NjNkYTM0NTc1MzYxNGI5YjQ2ZDhmMzlkMmNhYTEzOTc3ZmI5Y2NmMQ==\",\n  githubUserName: \"tushar22211\",\n  githubRepo: \"blog-api\",\n  title: \"DevZone\",\n  subtitle: \"A Developers Zone\",\n  header: {\n    backgroundColor: \"#f1f6f8\",\n    titleColor: \"#ff5252\",\n    subtitleColor: \"#37474f\",\n  },\n};\n","import ApolloClient from \"apollo-boost\";\n\nimport { config } from '../config'\n\nexport const client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${atob(config.githubConvertedToken)}`\n      }\n    });\n  }\n});\n\nexport const userClient = (token) => new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n});","import styled from \"styled-components\";\n\nimport { config } from \"../../config\";\nconst { backgroundColor } = config.header;\n\nexport const HeaderContainer = styled.div`\n  position: relative;\n  padding: 1em;\n  text-align: center;\n  background: ${backgroundColor};\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n\n  @media only screen and (max-width: 768px) {\n    padding: 3em;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 1em;\n  max-width: 1140px;\n  text-align: center;\n`","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { titleColor } = config.header\n\nexport const HeaderTitle = styled.h1`\n  font-weight: 700;\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 4.5em;\n  text-align: center;\n  color: ${titleColor};\n\n  @media only screen and (max-width: 768px) {\n    font-size: 3em;\n  }\n`","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { subtitleColor } = config.header\n\nexport const HeaderSubtitle = styled.h1`\n  font-weight: 400;\n  color: ${subtitleColor};\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 2.5em;\n  text-align: center;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 2em;\n  }\n`","import React from \"react\";\n\nimport {\n  HeaderContainer,\n  HeaderWrapper,\n  HeaderTitle,\n  HeaderSubtitle,\n} from \"./\";\nimport { config } from \"../../config\";\n\nexport const Header = () => {\n  return (\n    <HeaderContainer>\n      <HeaderWrapper>\n        <HeaderTitle>{config.title}</HeaderTitle>\n        <HeaderSubtitle>{config.subtitle}</HeaderSubtitle>\n      </HeaderWrapper>\n    </HeaderContainer>\n  );\n};\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport loader from '../../Assets/Img/loader.svg'\n\nconst LoaderContainer = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    height: 128px;\n  }\n`\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <img src={loader} alt=\"Loading...\" />\n  </LoaderContainer>\n)","import styled from \"styled-components\";\n\nexport const BlogContainer = styled.div`\n  width: 90%;\n  margin: 2rem auto 0;\n  padding: 20px 10px;\n  ${\"\" /* margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px; */};\n`;\n","import styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n  cursor: pointer;\n  border-radius: 10px;\n  padding: 10px;\n  transition: 0.2s;\n  position: relative;\n\n  ${\"\" /* :hover {\n    background-color: #f5f5f5;\n  } */}\n`;\n","import styled from 'styled-components'\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledCategory = styled.div`\n  display: inline-block;\n  background: #009bbb;\n  border-radius: 5px;\n  padding: 0px 10px;\n  font-size: 13px;\n  text-transform: uppercase;\n  color: #fff;\n  font-weight: 600;\n  line-height: 28px;\n  font-family: \"Quicksand\";\n  margin-right: 10px;\n`;\n\nexport const CardCategory = ({ value }) => (\n  <StyledCategory key={value.id} style={{ backgroundColor: `#${value.color}` }}>\n    {value.name}\n  </StyledCategory>\n);\n","import styled from 'styled-components'\n\nexport const CardTitle = styled.h2`\n  font-size: 34px;\n`","import styled from 'styled-components'\n\nexport const CardDescription = styled.p`\n  font-size: 18px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst ReadingTime = styled.p`\n  color: #b5b5b5;\n  font-size: 15px;\n  position: absolute;\n  top: -10px;\n  right: 10px;\n`\n\nexport const CardReadingTime = ({ time }) => (\n  <ReadingTime>{time} Min Read</ReadingTime>\n)","import React, { useState, useEffect } from \"react\";\nimport readingTime from \"reading-time\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  CardContainer,\n  CardHeader,\n  CardCategory,\n  CardReadingTime,\n  CardTitle,\n  CardDescription,\n} from \"./\";\n\nexport const Card = ({ blog }) => {\n  const [labels, setLabels] = useState([]);\n  const history = useHistory();\n\n  const openBlog = (title, number) => {\n    history.push(`/blog/${title}/${number}`);\n  };\n\n  useEffect(() => {\n    const labels = blog.labels.nodes.filter((value) => {\n      return value.name !== \"blog\";\n    });\n\n    setLabels(labels);\n  }, [blog.labels.nodes]);\n\n  return (\n    <CardContainer>\n      <CardHeader>\n        <CardReadingTime time={readingTime(blog.body).minutes} />\n      </CardHeader>\n      <div onClick={() => openBlog(blog.title, blog.number)}>\n        <CardTitle>{blog.title}</CardTitle>\n        {/* <CardDescription>{blog.bodyText}</CardDescription> */}\n        <>\n          {labels.map((value, i) => {\n            return <CardCategory value={value} key={i} />;\n          })}\n        </>\n      </div>\n    </CardContainer>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport \"./Blog.css\";\nimport { config } from \"../config\";\nimport { Header } from \"../Components/Header\";\nimport { Loader } from \"../Components/Common\";\nimport { BlogContainer } from \"../Components/Blog\";\nimport { Card } from \"../Components/Blog/Card\";\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`;\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error);\n      }\n\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes);\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <Header />\n      <BlogContainer>\n        <div className=\"repo-cards-div-main\">\n          {loading ? (\n            <Loader />\n          ) : (\n            posts.map((v, i) => {\n              return (\n                <div className=\"repo-card-div\">\n                  <Card blog={v} key={i} />\n                </div>\n              );\n            })\n          )}\n        </div>\n      </BlogContainer>\n    </>\n  );\n};\n\nexport default Blog;\n","import { reverseMapping } from './tools'\n\nconst emojis = {\n  'THUMBS_UP': '👍',\n  'THUMBS_DOWN': '👎',\n  'LAUGH': '😄',\n  'HOORAY': '🎉',\n  'CONFUSED': '😕',\n  'HEART': '❤️',\n  'ROCKET': '🚀',\n  'EYES': '👀',\n}\n\nexport const getEmojiByName = (emojiName) => {\n  return emojis[emojiName] || '';\n};\n\nexport const getNameByEmoji = (emoji) => {\n  return reverseMapping(emojis)[emoji] || '';\n};","export const getToken = () => {\n  return localStorage.getItem('githubToken');\n}\n\nexport const getAuthenticatedUser = async () => {\n  const token = localStorage.getItem('githubToken');\n  if (token) {\n    const response = await fetch('https://api.github.com/user', {\n      headers: new Headers({\n        authorization: `Bearer ${token}`\n      }),\n    });\n    const result = await response.json();\n    result.token = token;\n    return result;\n  }\n}","import styled from 'styled-components'\n\nexport const PostContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n  position: relative;\n`","import styled from 'styled-components'\n\nexport const PostTitle = styled.h1`\n  @media only screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`","import styled from 'styled-components'\n\nexport const PostDate = styled.p`\n  color: rgba(0, 0, 0, 0.54);\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`","import styled from 'styled-components'\n\nexport const PostDateLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n  color: rgba(0, 0, 0, 0.54);\n\n  :hover {\n    color: rgba(0, 0, 0, 0.84);\n  }\n`","import styled from 'styled-components'\n\nexport const PostReaction = styled.span`\n  position: absolute;\n  bottom: 60px;\n  animation-name: scale-in;\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\n`","import styled from \"styled-components\";\n\nexport const BackButton = styled.button`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  font-family: \"Shadows Into Light\", serif;\n  border-radius: 5px;\n  padding: 0px 20px 0 30px;\n  cursor: pointer;\n  position: relative;\n\n  :hover {\n    background-color: black;\n    color: white;\n  }\n\n  :before {\n    content: \"\\\\27A4\";\n    position: absolute;\n    transform: translateY(-50%) rotate(180deg);\n    left: 10px;\n    font-size: 16px;\n    top: 54%;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const AuthorDetails = styled.div`\n  display: flex;\n  align-items: center;\n`","import styled from 'styled-components'\n\nexport const AuthorAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 40px;\n  margin: 10px;\n  margin-left: 0px;\n`","import styled from 'styled-components'\n\nexport const AuthorName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 0px;\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.84);\n`","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport moment from \"moment\";\nimport Markdown from \"markdown-to-jsx\";\nimport readingTime from \"reading-time\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { GithubSelector, GithubCounter } from \"react-reactions\";\nimport { userClient } from \"../Utils/apollo\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { config } from \"../config\";\nimport { getEmojiByName, getNameByEmoji } from \"../Utils/emoji\";\nimport { getAuthenticatedUser } from \"../Utils/auth\";\nimport { Loader } from \"../Components/Common\";\nimport {\n  PostContainer,\n  PostTitle,\n  PostDate,\n  PostDateLink,\n  PostReaction,\n  BackButton,\n} from \"../Components/Post\";\nimport {\n  AuthorDetails,\n  AuthorAvatar,\n  AuthorName,\n} from \"../Components/Post/Author\";\n\nexport default function BlogHome() {\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\n  const GET_POSTS = gql`{\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n      issue(number: ${issueNumber}) {\n        title\n        body\n        bodyHTML\n        url\n        bodyText\n        number\n        bodyHTML\n        author {\n          url\n          avatarUrl\n          login\n        }\n        reactions(first:100){\n          nodes{\n            content\n            user{\n              id\n              login\n            }\n          }\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n  `;\n  const [post, setPost] = useState([]);\n  const [postNodeId, setPostNodeId] = useState(\"\");\n  const [reactionPopup, setReactionPopup] = useState(false);\n  const [postReactions, setPostReactions] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n  const reactionsContainer = useRef(null);\n  const userToken = localStorage.getItem(\"githubToken\");\n\n  const setReactionFun = useCallback((reactions) => {\n    // {\n    //   emoji: \"👍\", // String emoji reaction\n    //   by: \"case\" // String of persons name\n    // }\n\n    let reactions_array = [];\n    reactions.forEach((element) => {\n      let obj = {\n        by: element.user.login,\n        emoji: getEmojiByName(element.content),\n      };\n      reactions_array.push(obj);\n    });\n\n    setPostReactions(reactions_array);\n  }, []);\n\n  const HyperLink = ({ children, ...props }) => (\n    <a\n      href={props.href}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"blog-post-anchor\"\n    >\n      {children}\n      <style jsx=\"true\">\n        {`\n          a {\n            color: #484848;\n            font-weight: 400;\n          }\n        `}\n      </style>\n    </a>\n  );\n\n  const CodeBlock = ({ children }) => (\n    <SyntaxHighlighter language=\"javascript\" style={docco}>\n      {children.props.children}\n    </SyntaxHighlighter>\n  );\n\n  const toggleReaction = async (emoji) => {\n    let reactions = postReactions;\n    const user = await getAuthenticatedUser();\n    const existingReaction = reactions.filter(\n      (r) => r.emoji === emoji && r.by === user.login\n    );\n\n    if (existingReaction.length === 0) {\n      const reactionToAdd = {\n        by: user.login,\n        emoji: emoji,\n      };\n\n      // Add the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation AddReaction {\n            addReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(\n          emoji\n        )},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `,\n      });\n\n      reactions.push(reactionToAdd);\n    } else {\n      // Remove the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation RemoveReaction {\n            removeReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(\n          emoji\n        )},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `,\n      });\n\n      // Remove the reaction from the state\n      reactions = reactions.filter(\n        (r) => !(r.by === user.login && r.emoji === emoji)\n      );\n    }\n\n    setPostReactions(reactions);\n    reactionsContainer.current.forceUpdate(); // refresh the counter\n    setReactionPopup(false); // hiding the reactions choice\n  };\n\n  useEffect(() => {\n    if (!loading) {\n      if (data) {\n        const issues = data.repository.issue;\n        setPostNodeId(issues.id);\n        setPost(issues);\n        setReactionFun(issues.reactions.nodes);\n      }\n    }\n  }, [loading, error, data, setReactionFun]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const onBackClick = () => {\n    // ifthe previous page does not exist in the history list. this method to load the previous (or next) URL in the history list.\n    window.history.go();\n    // The back() method loads the previous URL in the history list.\n    window.history.back();\n  };\n\n  return (\n    <>\n      {post.title && (\n        <PostContainer>\n          <BackButton onClick={() => onBackClick()}>Back</BackButton>\n\n          <PostTitle>{post.title}</PostTitle>\n          <div>\n            <AuthorDetails>\n              <AuthorAvatar\n                src={post.author.avatarUrl}\n                alt={post.author.login}\n              />\n              <div>\n                <AuthorName>{post.author.login}</AuthorName>\n                <PostDate>\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} .\n                  {readingTime(post.body).minutes} Min Read .\n                  {/* <PostDateLink href={post.url} target=\"_black\">\n                    View On Github\n                  </PostDateLink> */}\n                </PostDate>\n              </div>\n            </AuthorDetails>\n          </div>\n          <Markdown\n            options={{\n              overrides: {\n                a: {\n                  component: HyperLink,\n                },\n                pre: {\n                  component: CodeBlock,\n                },\n              },\n            }}\n          >\n            {post.body}\n          </Markdown>\n          {/* {reactionPopup && (\n            <PostReaction>\n            </PostReaction>\n          )} */}\n          {/* <GithubCounter\n            ref={reactionsContainer}\n            counters={postReactions}\n            onSelect={(emoji) => toggleReaction(emoji)}\n            onAdd={() => setReactionPopup(!reactionPopup)}\n          /> */}\n        </PostContainer>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport Blog from \"./Containers/Blog\"\nimport BlogPost from \"./Containers/BlogPost\";\n\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\nconst history = createBrowserHistory();\n\nconst Router = () => {\n  return (\n    <HashRouter history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={Blog} />\n        <Route exact path=\"/blog/:title/:issueNumber\" component={BlogPost}/>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React, { useEffect, useState } from 'react'\n\nimport { config } from '../config'\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from '../Components/Common/Loader'\n\nconst { enableOAuth, OAuthClientID, OAuthSecret } = config\n\nconst GithubCallback = () => {\n  const [loading, setLoading] = useState(true)\n\n  const authenticate = async (code) => {\n    // Apparently we need to use a proxy to make this request (CORS blocked for client-side only applications)\n    const response = await fetch('https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token', {\n      method: 'POST',\n      body: new URLSearchParams({\n        client_id: OAuthClientID,\n        client_secret: OAuthSecret,\n        code: code,\n      }),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }),\n    })\n\n    return response.json()\n  }\n\n  const setUsername = async () => {\n    const { login } = await getAuthenticatedUser()\n    localStorage.setItem('githubUsername', login)\n  }\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    authenticate(urlParams.get('code'))\n    .then((response) => {\n      if (response) {\n        localStorage.setItem('githubToken', response.access_token)\n        setUsername().then(() => setLoading(false))\n      }\n    })\n  }, [])\n\n  if (!enableOAuth || !loading) {\n    return window.location.replace(window.location.origin + window.location.pathname);\n  }\n\n  return <Loader />\n}\n\nexport default GithubCallback\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Helmet } from \"react-helmet\";\n\nimport { config } from './config'\nimport { client } from './Utils/apollo';\nimport Router from './Router';\nimport GithubCallback from './Containers/GithubCallback';\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  if (urlParams.get('code')) {\n    return <GithubCallback />\n  }\n\n  return (\n    <>\n      <Helmet>\n          <title>{config.title}</title>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"description\" content={config.subtitle} />\n          <meta name=\"theme-color\" content={config.header.backgroundColor} />\n      </Helmet>\n      <ApolloProvider client={client}>\n        <Router />\n      </ApolloProvider>\n    </>\n  )\n};\n\nexport default Application;","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Application from './Application';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production') serviceWorker.register();\nelse serviceWorker.unregister();\n\n"],"sourceRoot":""}